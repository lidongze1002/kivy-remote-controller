# .github/workflows/main.yml
name: Build Kivy APK with Buildozer

on:
  push:
    branches: [ "master", "main" ] # 当代码被推送到 master 或 main 分支时触发

jobs:
  build-android:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 服务器环境

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # 第一步：下载你的代码到服务器

      - name: Set up JDK 11
        uses: actions/setup-java@v3 # 第二步：安装 Java 环境
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Buildozer and dependencies
        run: |
              sudo apt-get update
              sudo apt-get install -y python3-pip autoconf libtool pkg-config zlib1g-dev libncurses-dev libtinfo6 cmake libffi-dev build-essential
              pip install --upgrade cython==0.29.34 buildozer
              
      - name: Build with Buildozer
        run: |
              buildozer --version # 运行一个无害的命令，强制 buildozer 下载好所有依赖
              yes | /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses # 现在 sdkmanager 存在了，用它来同意协议
              buildozer android debug # 再次运行 buildozer，这次它会直接开始编译
      - name: Upload Artifact
        uses: actions/upload-artifact@v4 # 第五步：上传打包好的 APK 文件
        with:
          name: app-debug # 给这个文件起个名字
          path: bin/*.apk # 从 bin 文件夹下找到 .apk 文件
